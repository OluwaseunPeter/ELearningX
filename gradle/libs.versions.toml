[versions]
agp = "8.7.3"
kotlin = "2.0.20"
compose = "1.5.4"
compose-material3 = "1.1.2"
androidx-activityCompose = "1.8.0"
ktor = "3.0.2"
coroutines = "1.9.0"
serialization_version = "1.7.2"
serialization_plugin_version = "2.1.0"
koin = "4.0.0"
compose-multiplatform = "1.7.0"
androidx-lifecycle = "2.8.3"
androidx-navigation = "2.7.0-alpha06"
media3 = "1.4.0"
sqldelight = "2.0.2"


[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
androidx-lifecycle-runtime-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "androidx-navigation" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-serialization= { module = "io.ktor:ktor-client-serialization", version.ref = "ktor"}
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

kotlinx-serialization-json = {module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization_version"}

koin-core = {module = "io.insert-koin:koin-core", version.ref = "koin"}
koin-test = {module = "io.insert-koin:koin-test", version.ref = "koin"}
koin-android = {module = "io.insert-koin:koin-android", version.ref = "koin"}
koin-compose = {module = "io.insert-koin:koin-compose", version.ref = "koin"}
koin-compose-viewmodel	 = {module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin"}
koin-compose-viewmodel-navigation = {module = "io.insert-koin:koin-compose-viewmodel-navigation", version.ref = "koin"}

media3-exoplayer = {module = "androidx.media3:media3-exoplayer" ,version.ref = "media3"}
media3-ui = {module = "androidx.media3:media3-ui" ,version.ref = "media3"}
media3-datasource-okhttp = {module = "androidx.media3:media3-datasource-okhttp", version.ref = "media3"}
videocache = {module ="com.danikula:videocache" , version = "2.7.1"}

sqldelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-jvm = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
serialization = {id= "org.jetbrains.kotlin.plugin.serialization" , version.ref = "serialization_plugin_version"}
ksp = { id ="com.google.devtools.ksp" , version = "2.1.0-1.0.29"}
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
